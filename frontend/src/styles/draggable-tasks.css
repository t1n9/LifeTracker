/* 全局禁用默认拖拽行为 */
* {
  -webkit-user-drag: none;
  -khtml-user-drag: none;
  -moz-user-drag: none;
  -o-user-drag: none;
  user-drag: none;
}

/* 拖拽任务样式 */
.task-item {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  padding: 1rem;
  background: var(--bg-secondary);
  border: 1px solid var(--border-color);
  border-radius: 8px;
  transition: all 0.2s ease;
  margin-bottom: 0.5rem;
  /* 禁用浏览器默认拖拽样式 */
  -webkit-user-drag: none;
  -khtml-user-drag: none;
  -moz-user-drag: none;
  -o-user-drag: none;
  user-drag: none;
}

.task-item:hover {
  background: var(--bg-tertiary);
  border-color: var(--accent-primary);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  transform: translateY(-1px);
}

.task-item.bound {
  background: rgba(66, 153, 225, 0.1);
  border-color: var(--accent-primary);
  box-shadow: 0 0 0 2px rgba(66, 153, 225, 0.2);
}

.task-item.dragging {
  opacity: 0.8;
  transform: rotate(2deg) scale(1.02);
  box-shadow: 0 12px 30px rgba(0, 0, 0, 0.2);
  z-index: 1000;
  background: var(--bg-primary);
  border-color: var(--accent-primary);
}

/* 拖拽手柄 - 简化版本，无悬浮效果 */
.drag-handle-simple {
  cursor: grab;
  padding: 0.5rem;
  display: flex;
  align-items: center;
  color: var(--text-muted);
  opacity: 0.6;
  /* 禁用浏览器默认拖拽 */
  -webkit-user-drag: none;
  -khtml-user-drag: none;
  -moz-user-drag: none;
  -o-user-drag: none;
  user-drag: none;
  /* 禁用选择 */
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  /* 移动设备触摸优化 */
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: transparent;
  touch-action: none; /* 防止滚动干扰拖拽 */
  min-width: 44px; /* iOS推荐的最小触摸目标 */
  min-height: 44px;
}

.drag-handle-simple:active {
  cursor: grabbing;
}

/* 任务复选框样式 - 自定义外观 */
.task-checkbox {
  width: 18px;
  height: 18px;
  cursor: pointer;
  margin: 0;
  appearance: none;
  -webkit-appearance: none;
  border: 2px solid var(--border-color);
  border-radius: 4px;
  background: var(--bg-primary);
  position: relative;
  transition: all 0.2s ease;
  flex-shrink: 0;
}

.task-checkbox:hover {
  border-color: var(--accent-primary);
  background: var(--bg-secondary);
}

.task-checkbox:checked {
  background: var(--accent-primary);
  border-color: var(--accent-primary);
}

.task-checkbox:checked::after {
  content: '✓';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: white;
  font-size: 12px;
  font-weight: bold;
  line-height: 1;
}

.task-checkbox:focus {
  outline: none;
  box-shadow: 0 0 0 2px var(--accent-primary-alpha);
}

/* 任务内容 */
.task-content {
  flex: 1;
  min-width: 0;
}

.task-header {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

.task-title-row {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.task-title {
  font-weight: 500;
  color: var(--text-primary);
  font-size: 0.875rem;
  line-height: 1.4;
}

.priority-badge {
  font-size: 0.75rem;
  display: flex;
  align-items: center;
}

.task-description {
  font-size: 0.75rem;
  color: var(--text-muted);
  line-height: 1.3;
  margin-top: 0.25rem;
}

.task-pomodoro-count {
  font-size: 0.75rem;
  color: var(--text-muted);
  display: flex;
  align-items: center;
  gap: 0.25rem;
}

/* 操作按钮 */
.task-actions {
  display: flex;
  align-items: center;
  gap: 0.25rem;
}

.action-btn {
  width: 32px;
  height: 32px;
  border: none;
  border-radius: 6px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease;
  background: transparent;
  color: var(--text-muted);
}

.action-btn:hover {
  background: var(--bg-tertiary);
  color: var(--text-primary);
  transform: scale(1.05);
}

.action-btn:active {
  transform: scale(0.95);
}

.complete-btn:hover {
  background: var(--success-color);
  color: white;
}

.bind-btn:hover {
  background: var(--accent-primary);
  color: white;
}

.bind-btn.active {
  background: var(--accent-primary);
  color: white;
}

.start-btn:hover {
  background: var(--warning-color);
  color: white;
}

.edit-btn:hover {
  background: var(--info-color);
  color: white;
}

.delete-btn:hover {
  background: var(--error-color);
  color: white;
}

/* 拖拽排序动画 */
.sortable-item {
  transition: transform 200ms ease;
}

.sortable-item.sortable-drag {
  opacity: 0.4;
}

.sortable-item.sortable-ghost {
  opacity: 0.4;
}

/* 拖拽占位符 */
.sortable-fallback {
  opacity: 0.4;
}

/* DND Kit 拖拽样式 */
.dnd-kit-drag-overlay {
  transform: rotate(2deg) scale(1.02);
  box-shadow: 0 12px 30px rgba(0, 0, 0, 0.2);
  border: 2px solid var(--accent-primary);
  background: var(--bg-primary);
}

/* 拖拽时的占位符 */
.dnd-kit-sortable-item {
  transition: transform 200ms ease, opacity 200ms ease;
}

.dnd-kit-sortable-item.is-over {
  opacity: 0.5;
  transform: scale(0.95);
}

/* 响应式设计 */
@media (max-width: 768px) {
  .task-item {
    padding: 0.75rem;
    gap: 0.5rem;
    /* 移动设备触摸优化 */
    -webkit-tap-highlight-color: transparent;
    touch-action: manipulation; /* 优化触摸响应 */
  }

  .drag-handle {
    padding: 0.5rem; /* 移动设备上保持足够的触摸区域 */
    opacity: 0.8; /* 移动设备上默认更明显 */
  }

  .drag-handle:active {
    opacity: 1;
    background: var(--bg-tertiary);
    transform: scale(1.05); /* 触摸反馈 */
  }

  .action-btn {
    width: 32px; /* 增加移动设备上的触摸目标 */
    height: 32px;
    min-width: 44px; /* iOS推荐的最小触摸目标 */
    min-height: 44px;
  }

  .task-actions {
    gap: 0.25rem; /* 增加按钮间距 */
  }

  /* 拖拽时的移动设备优化 */
  .sortable-item.sortable-drag {
    opacity: 0.6;
    transform: scale(1.02); /* 轻微放大提供视觉反馈 */
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }
}

/* 拖拽时的全局样式 */
body.dragging {
  cursor: grabbing !important;
  /* 禁用用户选择 */
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  /* 移动设备优化 */
  -webkit-touch-callout: none; /* 禁用iOS长按菜单 */
  -webkit-tap-highlight-color: transparent; /* 禁用点击高亮 */
}

body.dragging * {
  cursor: grabbing !important;
}

/* 拖拽容器限制 */
.dnd-context {
  position: relative;
  overflow: hidden; /* 限制拖拽区域 */
}

/* 任务列表容器 */
.tasks-container {
  position: relative;
  overflow-x: hidden; /* 防止水平滚动 */
  /* 移除max-height限制，让任务列表自适应高度 */
  min-height: 200px; /* 保持最小高度，即使没有任务也有一定高度 */
  /* 创建独立的滚动上下文 */
  contain: layout style paint;
}

/* 拖拽时限制边界 */
.dnd-context {
  position: relative;
  overflow: hidden;
  min-height: 150px; /* 增加最小高度，确保有足够的拖拽空间 */
}

/* 拖拽提示 */
.drag-overlay {
  background: var(--bg-secondary);
  border: 2px dashed var(--accent-primary);
  border-radius: 8px;
  opacity: 0.8;
  transform: rotate(5deg);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
}

/* 拖拽区域高亮 */
.drop-zone {
  background: rgba(66, 153, 225, 0.05);
  border: 2px dashed var(--accent-primary);
  border-radius: 8px;
  padding: 1rem;
  text-align: center;
  color: var(--accent-primary);
  font-size: 0.875rem;
  margin: 0.5rem 0;
}

/* 动画效果 */
@keyframes taskSlideIn {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes taskSlideOut {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(20px);
  }
}

.task-item.entering {
  animation: taskSlideIn 0.3s ease-out;
}

.task-item.exiting {
  animation: taskSlideOut 0.3s ease-out;
}

/* 拖拽指示器 */
.drag-indicator {
  position: absolute;
  left: 0;
  right: 0;
  height: 2px;
  background: var(--accent-primary);
  border-radius: 1px;
  opacity: 0;
  transition: opacity 0.2s ease;
}

.drag-indicator.active {
  opacity: 1;
}

/* 任务优先级指示 */
.task-item[data-priority="2"] {
  border-left: 4px solid var(--error-color);
}

.task-item[data-priority="1"] {
  border-left: 4px solid var(--warning-color);
}

.task-item[data-priority="0"] {
  border-left: 4px solid var(--success-color);
}

/* 拖拽时的视觉反馈 */
.task-item.drag-over {
  background: rgba(66, 153, 225, 0.1);
  border-color: var(--accent-primary);
  transform: scale(1.02);
}

/* 微交互动画 */
.task-item {
  position: relative;
  overflow: hidden;
}

.task-item::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
  transition: left 0.5s ease;
}

.task-item:hover::before {
  left: 100%;
}
